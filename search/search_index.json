{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Tekana-eWallet API Documentation","text":"<p>Welcome to the Tekana-eWallet API documentation. This documentation provides information on using GraphQL to manage wallets and transactions in the Tekana-eWallet application.</p> <ul> <li>Getting Started: Getting started with our API.</li> <li>Usage Tutorial: A tutorial with examples on how to use the API to manage wallets and transactions.</li> <li>API Reference: A detailed reference guide for the available queries and mutations.</li> <li>Docker Installation: A detailed docker installation guide.</li> </ul> <p>Use the links above to navigate the documentation and learn how to interact with the API.</p>"},{"location":"docker-installation/","title":"Docker Installation Guide","text":"<p>This guide will walk you through the process of setting up a Docker environment for your project. Docker is a containerization platform that simplifies the process of deploying and running applications.</p>"},{"location":"docker-installation/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure that you have the following prerequisites installed on your system:</p> <ul> <li>Docker: You can download and install Docker from Docker's official website.</li> </ul>"},{"location":"docker-installation/#installation-steps","title":"Installation Steps","text":"<p>Follow these steps to set up and use Docker for your project:</p>"},{"location":"docker-installation/#1-build-docker-containers","title":"1. Build Docker Containers","text":"<p>To build Docker containers for your project, run the following command in your project directory:</p> <pre><code>make build\n</code></pre> <p>This command uses Docker Compose to build the containers defined in your project's docker-compose.yml file.</p>"},{"location":"docker-installation/#2-run-development-environment","title":"2. Run Development Environment","text":"<p>To start your development environment, execute the following command:</p> <pre><code>make run-dev\n</code></pre> <p>This command stops and removes any existing containers and then brings up the environment defined in the docker-compose.yml file. It's designed for development purposes.</p>"},{"location":"docker-installation/#3-run-database-migrations","title":"3. Run Database Migrations","text":"<p>If your project requires database migrations, you can run them with the following command:</p> <pre><code>make run-migrate\n</code></pre> <p>This command runs database migrations using the python manage.py migrate command within the application container.</p>"},{"location":"docker-installation/#4-shell-access","title":"4. Shell Access","text":"<p>You can access the shell of your application container for debugging or running commands using the following:</p> <pre><code>make shell\n</code></pre> <p>This will provide you with an interactive shell inside the container.</p>"},{"location":"docker-installation/#5-running-tests","title":"5. Running Tests","text":"<p>To run tests for your application, use the following command:</p> <pre><code>make test\n</code></pre> <p>This command executes tests within the application container using pytest or your specified testing framework.</p>"},{"location":"docker-installation/#6-clean-up","title":"6. Clean Up","text":"<p>To stop and remove all Docker containers for your project, run:</p> <pre><code>make clean\n</code></pre> <p>This is helpful for cleaning up your development environment.</p>"},{"location":"docker-installation/#7-viewing-logs","title":"7. Viewing Logs","text":"<p>To view the logs of your application container, you can use the following command:</p> <pre><code>make logs\n</code></pre> <p>This will display logs for the 'app' container, which can be useful for debugging.</p>"},{"location":"docker-installation/#conclusion","title":"Conclusion","text":"<p>You now have Docker set up for Tekana-eWallet. You can use these commands to build, run, and manage your development environment efficiently. Docker simplifies the process of managing dependencies and ensures consistent environments across different systems.</p>"},{"location":"getting-started/","title":"Getting started","text":"<p>This guide will walk you through the process of installing Tekana - eWallet from our GitHub and setting up a virtual environment for your the project.</p>"},{"location":"getting-started/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure that you have the following prerequisites installed on your system:</p> <ul> <li>Python (3.6 or higher)</li> <li>Git</li> </ul>"},{"location":"getting-started/#step-1-clone-the-django-repository","title":"Step 1: Clone the Django Repository","text":"<ol> <li> <p>Open your terminal or command prompt.</p> </li> <li> <p>Navigate to the directory where you want to store your Django project.</p> </li> <li> <p>Clone the Django repository from GitHub using the following command:</p> </li> </ol> <pre><code>git clone https://github.com/j4l13n/e-wallet.git\n</code></pre> <pre><code>cd e-wallet\n</code></pre>"},{"location":"getting-started/#step-2-create-a-virtual-environment","title":"Step 2: Create a Virtual Environment","text":"<ol> <li>Inside your project directory, create a virtual environment. You can do this using Python's built-in venv module. Replace myenv with your preferred environment name:</li> </ol> <pre><code>python -m venv myenv\n</code></pre> <ol> <li>Activate the virtual environment:<ul> <li>On Windows:</li> </ul> </li> </ol> <pre><code>myenv\\Scripts\\activate\n</code></pre> <ul> <li>On Mac:</li> </ul> <pre><code>source myenv/bin/activate\n</code></pre> <p>This will install the necessary Python packages for your project.</p>"},{"location":"getting-started/#step-3-install-dependencies","title":"Step 3: Install Dependencies","text":"<ol> <li> <p>With the virtual environment active, navigate to your project directory (the one containing the requirements.txt file).</p> </li> <li> <p>Install project dependencies using pip:</p> </li> </ol> <pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"getting-started/#step-4-configure-environment-varibles","title":"Step 4: Configure Environment varibles","text":"<ol> <li>Create a <code>.env</code> file for environment variables</li> </ol> <pre><code>cp .env-example &gt; .env\n</code></pre>"},{"location":"getting-started/#step-5-run-migrations","title":"Step 5: Run Migrations","text":"<ol> <li>Apply database migrations to create the database tables:</li> </ol> <pre><code>python manage.py migrate\n</code></pre> <ol> <li>Create a superuser for the Django admin:</li> </ol> <pre><code>python manage.py createsuperuser\n</code></pre>"},{"location":"getting-started/#step-6-run-the-development-server","title":"Step 6: Run the Development Server","text":"<ol> <li>Start the Django development server:</li> </ol> <pre><code>python manage.py runserver\n</code></pre> <ol> <li>Open your web browser and access your Django project at http://127.0.0.1:8000/.</li> </ol>"},{"location":"reference/","title":"Tekana-eWallet GraphQL API Reference","text":"<p>The Tekana-eWallet GraphQL API allows you to manage wallets and transactions in the application. This reference provides an overview of the available queries and mutations.</p>"},{"location":"reference/#wallets","title":"Wallets","text":""},{"location":"reference/#querying-wallets","title":"Querying Wallets","text":"<ul> <li>Description: Retrieve a list of wallets along with their details.</li> <li>Query:</li> </ul> <pre><code>  query {\n    wallets {\n      id\n      balance\n      customer {\n        id\n        username\n        email\n      }\n    }\n  }\n</code></pre>"},{"location":"reference/#creating-a-wallet","title":"Creating a Wallet","text":"<ul> <li>Description: Create a new wallet for a customer.</li> <li>Mutation:</li> </ul> <pre><code>mutation {\n  createWallet(input: {\n    balance: Float!\n    customer: ID!\n  }) {\n    wallet {\n      id\n      balance\n    }\n  }\n}\n</code></pre> <ul> <li><code>balance</code>: The initial balance of the wallet.</li> <li><code>customer</code>: The ID of the customer who owns the wallet.</li> </ul>"},{"location":"reference/#transactions","title":"Transactions","text":""},{"location":"reference/#querying-transactions","title":"Querying Transactions","text":"<ul> <li>Description: Retrieve a list of transactions along with their details.</li> <li>Query:</li> </ul> <pre><code>query {\n  transactions {\n    id\n    amount\n    transactionType\n    sourceWallet {\n      id\n      balance\n    }\n    destinationWallet {\n      id\n      balance\n    }\n    timestamp\n  }\n}\n</code></pre>"},{"location":"reference/#creating-a-transaction","title":"Creating a Transaction","text":"<ul> <li>Description: Create a new transaction.</li> <li>Mutation:</li> </ul> <pre><code>mutation {\n  createTransaction(input: {\n    amount: Float!\n    transactionType: \"credit\" or \"debit\"\n    sourceWallet: ID!\n    destinationWallet: ID!\n  }) {\n    transaction {\n      id\n      amount\n    }\n  }\n}\n</code></pre> <ul> <li><code>amount</code>: The transaction amount.</li> <li><code>transactionType</code>: The type of transaction, either \"credit\" or \"debit.\"</li> <li><code>sourceWallet</code>: The ID of the source wallet.</li> <li><code>destinationWallet</code>: The ID of the destination wallet.</li> </ul>"},{"location":"reference/#conclusion","title":"Conclusion","text":"<p>This reference documentation provides an overview of the available GraphQL queries and mutations for managing wallets and transactions in the Tekana-eWallet application. Use this reference to interact with the API and customize queries and mutations as needed for your project.</p>"},{"location":"tutorials/","title":"Using the Wallet and Transaction API","text":"<p>This tutorial will guide you through using the API to manage wallets and transactions in the \"Tekana-eWallet\" application.</p>"},{"location":"tutorials/#prerequisites","title":"Prerequisites","text":"<p>Before you get started, make sure you have the necessary tools and permissions:</p> <ul> <li>A running instance of the \"Tekana-eWallet\" application.</li> <li>Access to the API endpoints.</li> <li>A tool for making HTTP requests, such as <code>curl</code> or a GUI tool like Postman.</li> </ul>"},{"location":"tutorials/#wallets","title":"Wallets","text":""},{"location":"tutorials/#querying-wallets","title":"Querying Wallets","text":"<p>To retrieve wallet information, use the following query:</p> <pre><code>query {\n    wallets {\n        id\n        balance\n        customer {\n        id\n        username\n        email\n        }\n    }\n}\n</code></pre> <ul> <li>Replace id, balance, and customer with the fields you want to retrieve.</li> <li>Execute the query using your preferred HTTP client, providing the appropriate URL for your API endpoint.</li> </ul>"},{"location":"tutorials/#creating-a-wallet","title":"Creating a Wallet","text":"<p>To create a new wallet, use the following mutation:</p> <pre><code>mutation {\n  createWallet(input: {\n    balance: 100.00\n    customer: 1  # Replace with the customer's ID\n  }) {\n    wallet {\n      id\n      balance\n    }\n  }\n}\n</code></pre> <ul> <li>Replace balance with the initial balance of the wallet.</li> <li>Replace customer with the ID of the customer who owns the wallet.</li> <li>Execute the mutation using your preferred HTTP client.</li> </ul>"},{"location":"tutorials/#transactions","title":"Transactions","text":""},{"location":"tutorials/#querying-transactions","title":"Querying Transactions","text":"<p>To retrieve transaction history, use the following query:</p> <pre><code>query {\n  transactions {\n    id\n    amount\n    transactionType\n    sourceWallet {\n      id\n      balance\n    }\n    destinationWallet {\n      id\n      balance\n    }\n    timestamp\n  }\n}\n</code></pre> <ul> <li>Replace id, amount, transactionType, sourceWallet, destinationWallet, and timestamp with the fields you want to retrieve.</li> <li>Execute the query using your preferred HTTP client.</li> </ul>"},{"location":"tutorials/#creating-a-transaction","title":"Creating a Transaction","text":"<p>To create a new transaction, use the following mutation:</p> <pre><code>mutation {\n  createTransaction(input: {\n    amount: 50.00\n    transactionType: \"debit\"  # or \"credit\"\n    sourceWallet: 1  # Replace with the source wallet's ID\n    destinationWallet: 2  # Replace with the destination wallet's ID\n  }) {\n    transaction {\n      id\n      amount\n    }\n  }\n}\n</code></pre> <ul> <li>Replace amount with the transaction amount.</li> <li>Choose transactionType as either \"debit\" or \"credit.\"</li> <li>Replace sourceWallet with the ID of the source wallet.</li> <li>Replace destinationWallet with the ID of the destination wallet.</li> <li>Execute the mutation using your preferred HTTP client.</li> </ul>"},{"location":"tutorials/#conclusion","title":"Conclusion","text":"<p>You've now learned how to use the API to manage wallets and transactions in the \"Tekana-eWallet\" application. Customize your queries and mutations based on your requirements.</p> <p>If you encounter any issues or have questions, please refer to the project documentation or contact our support team.</p>"}]}